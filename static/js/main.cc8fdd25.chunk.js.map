{"version":3,"sources":["components/card/index.jsx","components/board/index.jsx","deck.js","index.js","App.jsx"],"names":["Card","_ref","handleClick","flipped","solved","id","height","type","width","disabled","react_default","a","createElement","className","concat","style","onClick","alt","src","Board","size_card","cards","map","card","Object","assign","key","includes","initializeDeck","number","value","array","new_array","slice","i","length","index","Math","floor","random","temp","shuffle","set","choiceFace","push","choiceSet","reduce","acc","apply","ReactDOM","render","_useState","useState","_useState2","slicedToArray","show","setShow","_useState3","_useState4","setCards","_useState5","_useState6","setFlipped","_useState7","_useState8","setSolved","_useState9","_useState10","setSize","_useState11","_useState12","setDisabled","_useState13","_useState14","score","setScore","_useState15","_useState16","numberCards","setNumberCards","_useState17","_useState18","setValue","resetCards","win","alert","handleValue","event","target","max","min","onChange","name","defaultChecked","toConsumableArray","sameCardClickedTwice","clickedCard","find","isAMatch","setTimeout","document","getElementById"],"mappings":"gRAKe,SAASA,EAATC,GASZ,IARDC,EAQCD,EARDC,YACAC,EAOCF,EAPDE,QACAC,EAMCH,EANDG,OACAC,EAKCJ,EALDI,GACAC,EAICL,EAJDK,OACAC,EAGCN,EAHDM,KACAC,EAECP,EAFDO,MACAC,EACCR,EADDQ,SAEA,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAS,kBAAAC,OAAoBX,EAAU,UAAY,IACnDY,MAAO,CACLP,QACAF,UAEFU,QAAS,kBAAOP,EAAW,KAAOP,EAAYG,KAE9CK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OACEK,IAAI,OACJJ,UAAWV,EAAU,QAAU,OAC/Be,IAAKf,GAAWC,EAAX,QAAAU,OAA4BP,EAA5B,QAAyC,gBAC9CQ,MAAO,CAAEP,QAAOF,oBCtBX,SAASa,EAATlB,GAOZ,IANDmB,EAMCnB,EANDmB,UACAC,EAKCpB,EALDoB,MACAlB,EAICF,EAJDE,QACAC,EAGCH,EAHDG,OACAF,EAECD,EAFDC,YACAO,EACCR,EADDQ,SAEA,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAU,SAETQ,EAAMC,IAAI,SAACC,GAAD,OACTb,EAAAC,EAAAC,cAACZ,EAADwB,OAAAC,OAAA,CACEC,IAAKH,EAAKlB,GACVG,MAAOY,EACPd,OAAQc,EACRlB,YAAaA,EACbC,QAASA,EAAQwB,SAASJ,EAAKlB,IAC/BD,OAAQA,EAAOuB,SAASJ,EAAKlB,IAC7BI,SAAUA,GAAYL,EAAOuB,SAASJ,EAAKlB,KACvCkB,aCAC,SAASK,EAAeC,EAAQC,GAC3C,IAAIzB,EAAK,EAYX,OAzCF,SAAiB0B,GAEf,IADA,IAAMC,EAAYD,EAAME,MAAM,GACrBC,EAAG,EAAGA,EAAGF,EAAUG,OAAS,EAAGD,IAAK,CAC3C,IAAIE,EAAQC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACxCM,EAAOR,EAAUE,GACrBF,EAAUE,GAAKF,EAAUI,GACzBJ,EAAUI,GAASI,EAErB,OAAOR,EAiCAS,CArBT,SAAmBZ,EAAQC,GAGvB,IAFA,IAAMY,EAXV,SAAoBZ,GAKhB,OAAa,GAATA,EAJS,CAAC,QAAS,QAAS,QAAS,QACrC,QAAS,SACA,CAAC,OAAQ,OAAQ,OAAQ,OAClC,OAAQ,QAOAa,CAAWb,GACjBT,EAAQ,GACLa,EAAI,EAAGA,EAAEL,EAAQK,IACxBb,EAAMuB,KAAKF,EAAIR,IAEjB,OAAOb,EAIOwB,CAAUhB,EAAQC,GAAOgB,OAAO,SAACC,EAAKxC,GAQpD,OAPIwC,EAAIH,KAAJI,MAAAD,EAAY,CAAC,CACT1C,GAAIA,IACJE,QACL,CACDF,GAAIA,IACJE,UAEKwC,GACN,KClCLE,IAASC,OAAOxC,EAAAC,EAAAC,cCAD,WAAc,IAAAuC,EAEDC,oBAAS,GAFRC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA2B,EAAA,GAElBI,EAFkBF,EAAA,GAEZG,EAFYH,EAAA,GAAAI,EAGCL,mBAAS,IAHVM,EAAAlC,OAAA8B,EAAA,EAAA9B,CAAAiC,EAAA,GAGlBpC,EAHkBqC,EAAA,GAGXC,EAHWD,EAAA,GAAAE,EAIKR,mBAAS,IAJdS,EAAArC,OAAA8B,EAAA,EAAA9B,CAAAoC,EAAA,GAIlBzD,EAJkB0D,EAAA,GAITC,EAJSD,EAAA,GAAAE,EAKGX,mBAAS,IALZY,EAAAxC,OAAA8B,EAAA,EAAA9B,CAAAuC,EAAA,GAKlB3D,EALkB4D,EAAA,GAKVC,EALUD,EAAA,GAAAE,EAMId,mBAAS,KANbe,EAAA3C,OAAA8B,EAAA,EAAA9B,CAAA0C,EAAA,GAMlB9C,EANkB+C,EAAA,GAMPC,EANOD,EAAA,GAAAE,EAOOjB,oBAAS,GAPhBkB,EAAA9C,OAAA8B,EAAA,EAAA9B,CAAA6C,EAAA,GAOlB5D,EAPkB6D,EAAA,GAORC,EAPQD,EAAA,GAAAE,EAQCpB,mBAAS,GARVqB,EAAAjD,OAAA8B,EAAA,EAAA9B,CAAAgD,EAAA,GAQlBE,EARkBD,EAAA,GAQXE,EARWF,EAAA,GAAAG,EASaxB,mBAAS,GATtByB,EAAArD,OAAA8B,EAAA,EAAA9B,CAAAoD,EAAA,GASlBE,EATkBD,EAAA,GASLE,EATKF,EAAA,GAAAG,EAUC5B,mBAAS,GAVV6B,EAAAzD,OAAA8B,EAAA,EAAA9B,CAAAwD,EAAA,GAUlBlD,EAVkBmD,EAAA,GAUXC,EAVWD,EAAA,GAoBnBE,EAAa,WACfrB,EAAW,IACXS,GAAY,IAGVa,EAAM,WACRC,MAAM,aA+BJC,EAAc,SAACC,GACjBL,EAASK,EAAMC,OAAO1D,QAuB1B,OACIpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAW,UAAlB,uLACFH,EAAAC,EAAAC,cAAA,SACIL,KAAK,SACLkF,IAAK,EACLC,IAAK,EACLC,SAtCQ,SAACJ,GACdA,EAAMC,OAAO1D,MAAM,GAAOyD,EAAMC,OAAO1D,MAAM,GAC9CiD,EAAeQ,EAAMC,OAAO1D,WAuC1BpB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,SACZH,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAOL,KAAM,QAASqF,KAAM,QAASC,gBAAgB,EAAM/D,MAAO,IAAKd,QAASsE,IAAvF,QACA5E,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAOL,KAAM,QAASqF,KAAM,QAAS9D,MAAO,IAAKd,QAASsE,IAAjE,QAEJ5E,EAAAC,EAAAC,cAAA,UAAQI,QAnCK,WAKjB,OAJA2C,EAAS/B,EAAekD,EAAahD,IACrCmC,EAAU,IACVH,EAAW,IACXa,EAAS,GACDG,GACJ,IAAK,IACDV,EAAQ,KACR,MACJ,IAAK,IACDA,EAAQ,IAAIU,GACZ,MACJ,QACIV,EAAQ,KAEXU,EAAY,GAAKA,EAAY,GAC9BtB,GAAQ,KAmBR,kEACA9C,EAAAC,EAAAC,cAACO,EAAD,CACIE,MAAOA,EACPlB,QAASA,EACTC,OAAQA,EACRgB,UAAWA,EACXlB,YAzEQ,SAACG,GAEjB,GADAkE,GAAY,GACW,IAAnBpE,EAAQgC,OACR2B,EAAW,SAAC3D,GAAD,SAAAW,OAAAU,OAAAsE,EAAA,EAAAtE,CAAiBrB,GAAjB,CAA0BE,MACrCkE,GAAY,OACT,CACH,GAvBqB,SAAClE,GAAD,OAAQF,EAAQwB,SAAStB,GAuB1C0F,CAAqB5F,GAAc,OAEvC,GADA2D,EAAW,SAAC3D,GAAD,SAAAW,OAAAU,OAAAsE,EAAA,EAAAtE,CAAiBrB,GAAjB,CAA0BE,MAtB5B,SAACA,GACd,IAAM2F,EAAc3E,EAAM4E,KAAK,SAAC1E,GAAD,OAAUA,EAAKlB,KAAOA,IAErD,OADoBgB,EAAM4E,KAAK,SAAC1E,GAAD,OAAUpB,EAAQ,KAAOoB,EAAKlB,KAC1CE,OAASyF,EAAYzF,KAoBhC2F,CAAS7F,GAAK,CACd4D,EAAS,GAAAnD,OAAAU,OAAAsE,EAAA,EAAAtE,CAAKpB,GAALoB,OAAAsE,EAAA,EAAAtE,CAAgBrB,GAAhB,CAAyBE,KAClC8E,IACA,IAAM3C,EAAOkC,EAAM,EACnBC,EAASnC,GACLA,GAAQsC,GACRqB,WAAWf,EAAK,UAGpBe,WAAWhB,EAAY,OAyDvB1E,SAAUA,IArBlB,IAuBIC,EAAAC,EAAAC,cAAA,KAAGC,UAAW0C,EAAO,QAAU,UAA/B,gDAAoDmB,KDzGhD,MAAS0B,SAASC,eAAe","file":"static/js/main.cc8fdd25.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './styles.css'\n\nexport default function Card({\n  handleClick,\n  flipped,\n  solved,\n  id,\n  height,\n  type,\n  width,\n  disabled,\n}) {\n  return (\n    <div\n      className={`flip-container ${flipped ? 'flipped' : ''}`}\n      style={{\n        width,\n        height,\n      }}\n      onClick={() => (disabled ? null : handleClick(id))}\n    >\n      <div className='flipper'>\n        <img\n          alt='card'\n          className={flipped ? 'front' : 'back'}\n          src={flipped || solved ? `/img/${type}.png` : '/img/back.png'}\n          style={{ width, height }}\n        />\n      </div>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  flipped: PropTypes.bool.isRequired,\n  solved: PropTypes.bool.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Card from '../card'\n\nimport './styles.css'\n\nexport default function Board({\n  size_card,\n  cards,\n  flipped,\n  solved,\n  handleClick,\n  disabled,\n}) {\n  return (\n    <div\n      className='board'\n    >\n      {cards.map((card) => (\n        <Card\n          key={card.id}\n          width={size_card}\n          height={size_card}\n          handleClick={handleClick}\n          flipped={flipped.includes(card.id)}\n          solved={solved.includes(card.id)}\n          disabled={disabled || solved.includes(card.id)}\n          {...card}\n        />\n      ))}\n    </div>\n  )\n}\n\nBoard.propTypes = {\n  dimension: PropTypes.number.isRequired,\n  cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\n  solved: PropTypes.arrayOf(PropTypes.number).isRequired,\n  handleClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n}\n","function shuffle(array) {\n  const new_array = array.slice(0)\n  for (let i =0; i< new_array.length - 1; i++) {\n    var index = Math.floor(Math.random() * (i + 1))\n    var temp = new_array[i]\n    new_array[i] = new_array[index]\n    new_array[index] = temp\n  }\n  return new_array\n}\nfunction choiceFace(value){\n    const set1 = ['cake1', 'cake2', 'cake3', 'cake4',\n        'cake5', 'cake6']\n    const set2 = ['cat1', 'cat2', 'cat3', 'cat4',\n        'cat5', 'cat6']\n    if (value == 1){\n        return set1\n    } else\n        return set2\n}\nfunction choiceSet(number, value){\n    const set = choiceFace(value)\n    const cards = []\n    for (let i = 0; i<number; i++){\n      cards.push(set[i])\n    }\n    return cards\n}\nexport default function initializeDeck(number, value) {\n    let id = 0\n    const cards = choiceSet(number, value).reduce((acc, type) => {\n        acc.push(...[{\n            id: id++,\n            type\n    }, {\n      id: id++,\n      type\n    }])\n    return acc\n  }, [])\n\n  return shuffle(cards)\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))","import React, {useState} from 'react'\nimport Board from './components/board'\nimport './App.css'\nimport initializeDeck from './deck'\n\nexport default function App(){\n\n    const [show, setShow] = useState(false)\n    const [cards, setCards] = useState([])\n    const [flipped, setFlipped] = useState([])\n    const [solved, setSolved] = useState([])\n    const [size_card, setSize] = useState(150)\n    const [disabled, setDisabled] = useState(false)\n    const [score, setScore] = useState(0)\n    const [numberCards, setNumberCards] = useState(0)\n    const [value, setValue] = useState(1)\n\n    const sameCardClickedTwice = (id) => flipped.includes(id)\n\n    const isAMatch = (id) => {\n        const clickedCard = cards.find((card) => card.id === id)\n        const flippedCard = cards.find((card) => flipped[0] === card.id)\n        return flippedCard.type === clickedCard.type\n    }\n\n    const resetCards = () => {\n        setFlipped([])\n        setDisabled(false)\n    }\n\n    const win = () => {\n        alert('You win!')\n    }\n\n    const handleClick = (id) => {\n        setDisabled(true)\n        if (flipped.length === 0) {\n            setFlipped((flipped) => [...flipped, id])\n            setDisabled(false)\n        } else {\n            if (sameCardClickedTwice(flipped, id)) return\n            setFlipped((flipped) => [...flipped, id])\n            if (isAMatch(id)) {\n                setSolved([...solved, ...flipped, id])\n                resetCards()\n                const temp = score+1\n                setScore(temp)\n                if (temp == numberCards){\n                    setTimeout(win, 1000)\n                }\n            } else {\n                setTimeout(resetCards, 1000)\n            }\n        }\n    }\n\n    const handleInput = (event) => {\n      if ((event.target.value<7) && (event.target.value>1)) {\n          setNumberCards(event.target.value)\n      }\n    }\n\n    const handleValue = (event) => {\n        setValue(event.target.value)\n    }\n\n    const handleButton = () => {\n        setCards(initializeDeck(numberCards, value))\n        setSolved([])\n        setFlipped([])\n        setScore(0)\n        switch (numberCards) {\n            case '2':\n                setSize(250)\n                break;\n            case '3':\n                setSize(630/numberCards);\n                break;\n            default:\n                setSize(150)\n        }\n        if ((numberCards>1)&&(numberCards<7)){\n            setShow(true)\n        }\n    }\n\n    return (\n        <div>\n            <h1>Memory game</h1>\n              <label className={'choice'}> Выберите количество карт для игры:\n            <input\n                type=\"number\"\n                max={6}\n                min={2}\n                onChange={handleInput}\n            />\n              </label>\n            <div className={'radio'}>\n                <label><input type={'radio'} name={'check'} defaultChecked={true} value={'1'} onClick={handleValue} />Cake</label>\n                <label><input type={'radio'} name={'check'} value={'2'} onClick={handleValue}/>Cat</label>\n            </div>\n            <button onClick={handleButton}> Начать игру</button>\n            <Board\n                cards={cards}\n                flipped={flipped}\n                solved={solved}\n                size_card={size_card}\n                handleClick={handleClick}\n                disabled={disabled}\n            />}\n            <p className={show ? 'score' : 'hidden'}>Ваш счет: {score}</p>\n        </div>\n    )\n}\n"],"sourceRoot":""}